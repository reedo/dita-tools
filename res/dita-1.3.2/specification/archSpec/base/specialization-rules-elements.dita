<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="specialization-rules-elements" xml:lang="en-us">
  <title>Specialization rules for element types</title>
  <shortdesc>There are certain rules that apply to element type specializations.</shortdesc>
  <conbody>
    <p>A specialized element type has the following characteristics:</p>
    <ul>
      <li>A properly-formed <xmlatt>class</xmlatt> attribute that specifies the specialization
        hierarchy of the element</li>
      <li>A content model that is the same or less inclusive than that of the element from which it
        was specialized</li>
      <li>A set of attributes that are the same or a subset of those of the element from which it
        was specialized</li>
      <li>Values or value ranges of attributes that are the same or a subset of those of the element
        from which it was specialized</li>
    </ul>
    <p>DITA elements are never in a namespace. Only the <xmlatt>DITAArchVersion</xmlatt> attribute
      is in a DITA-defined namespace. All other attributes, except for those defined by the XML
      standard, are in no namespace.</p>
    <p>This limitation is imposed by the details of the <xmlatt>class</xmlatt> attribute syntax,
      which makes it impractical to have namespace-qualified names for either vocabulary modules or
      individual element types or attributes. Elements included as descendants of the DITA
        <xmlelement>foreign</xmlelement> element type can be in any namespace.</p>
    <note>Domain modules that are intended for wide use should define element type names that are
      unlikely to conflict with names used in other domains, for example, by using a domain-specific
      prefix on all names.</note>
    <!--<draft-comment author="Kristen Eberlein" time="21 February 2015"><p>The following content relocated from the "DTD: Coding requirements for element type declarations" topic:</p><p>The attributes of an element type <term outputclass="RFC-2119" rev="terminology">MUST</term> restrict or conserve those of the element type it specializes. Specialized element types may not add new attributes. New global attributes may be defined via attribute domain modules. Structural modules might require the use of attribute domain modules.</p></draft-comment>-->
  </conbody>
</concept>

